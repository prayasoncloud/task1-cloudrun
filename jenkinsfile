pipeline {
    agent any

    environment {
        AWS_CREDENTIALS = 'cli-option'
        ECR_REGISTRY = '010526246825.dkr.ecr.ap-south-1.amazonaws.com'
        ECR_REPOSITORY = 'flask-hw'
        IMAGE_TAG = "latest"
        APP_NAME = "my-app" // Define APP_NAME if not already defined
    }

    stages {
        stage('Push Image to ECR') {
            steps {
                withAWS(credentials: AWS_CREDENTIALS, region: 'ap-south-1') {
                    sh """
                        set -e
                        echo "Logging in to AWS ECR..."
                        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${ECR_REGISTRY}
                        echo "Tagging the Docker image..."
                        docker tag ${ECR_REPOSITORY}:${IMAGE_TAG} ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
                        echo "Pushing the Docker image to ECR..."
                        docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Deploy to Docker Host') {
            steps {
                script {
                    sshagent(['ssh-key-credentials-id']) { // Jenkins credentials ID for SSH key
                        sh '''
                            ssh -o StrictHostKeyChecking=no ubuntu@3.109.201.10 <<EOF
                                echo "Getting started with Deployment stage"
                                docker pull ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} &&
                                docker stop ${APP_NAME} || true &&
                                docker rm ${APP_NAME} || true &&
                                docker run -d --name ${APP_NAME} -p 80:80 ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
                            EOF
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed.'
        }
    }
}
